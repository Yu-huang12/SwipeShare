rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Products collection (for Stripe)
    match /products/{productId} {
      allow read: if true;  // Allow public read
      allow write: if false;  // Only admin can write
      
      match /prices/{priceId} {
        allow read: if true;  // Allow public read
      }
    }

    // Meal requests
    match /meal_requests/{requestId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if request.auth.uid == userId;
    }

    // Payments collection
    match /payments/{paymentId} {
      allow read: if isAuthenticated() 
        && request.auth.uid == resource.data.userId;
      allow create: if isAuthenticated() 
        && request.auth.uid == request.resource.data.userId;
    }

    // Stripe configuration
    match /stripe_config/{docId} {
      allow read: if isAuthenticated();
    }

    // Stripe customers
    match /customers/{uid} {
      allow read: if request.auth.uid == uid;
      allow write: if request.auth.uid == uid;
    }

    // Notifications
    match /notifications/{notificationId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}